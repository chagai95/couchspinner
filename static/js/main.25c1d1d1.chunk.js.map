{"version":3,"sources":["Intro.js","components.js","utils.js","References.js","AboutMe.js","Messages.js","Friends.js","Raw.js","Profile.js","App.js","serviceWorker.js","index.js","sofa.svg","trustroots-tree.svg"],"names":["Intro","isDragActive","input","className","src","sofa","alt","onClick","event","stopPropagation","href","Section","children","Heading","Content","props","CsProfileLink","id","formatDate","date","Date","toLocaleDateString","undefined","year","month","day","countReferences","references","experience","length","filter","reference","References","written_references","received_references","map","key","creator_id","recipient_id","created_at","reference_type","type","referenceTypeLabel","body","dangerouslySetInnerHTML","__html","marked","AboutMe","user","interests","profile","about_me","interest","name","media","teach","amazing_thing","surf_reason","offer_hosts","Messages","messages","friends","friend","parseInt","replace","Raw","json","data","Profile","fileDate","images","user_data","routes","route","label","count","first_name","last_name","username","occupation","activeClassName","to","exact","path","Friends","target","rel","TrustrootsTree","getJsonFromZip","zip","a","files","relativePath","zipEntry","dir","split","pop","file","async","jsonString","JSON","parse","getImagesFromZip","includes","extractZip","jszip","loadAsync","App","useState","setProfile","profileImages","setProfileImages","setFileDate","onDrop","useCallback","acceptedFiles","console","log","alert","lastModifiedDate","text","jsonProfile","useDropzone","getRootProps","getInputProps","classnames","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.25c1d1d1.chunk.js","sourcesContent":["import React from 'react'\n\nimport sofa from './sofa.svg';\nimport './Intro.css';\n\nfunction Intro({isDragActive, input}) {\n  return (\n    <div className=\"Intro\">\n      <h1>CouchSpinner</h1>\n      { /* https://www.flaticon.com/free-icon/sofa_2965901?term=sofa&page=1&position=39 */ }\n      <img src={sofa} className=\"Intro-logo\" alt=\"logo\" />\n      { input }\n      {\n        isDragActive ?\n          <p>Drop the file here...</p> :\n          <p>Drop the Couchsurfing profile file here, or click to select file.</p>\n      }\n      <p>By <a onClick={event => { event.stopPropagation() }} href=\"https://www.trustroots.org/?ref=couchspinner\">Trustroots</a></p>\n    </div>\n  );\n}\n\nexport default Intro;\n","import React from 'react'\n\nimport './components.css';\n\nexport function Section({children}) {\n  return <div className=\"Section\">{children}</div>\n}\n\nexport function Heading({children}) {\n  return <div className=\"Section-heading\">{children}</div>\n}\n\nexport function Content(props) {\n  return <div className=\"Section-content\" {...props}>{props.children}</div>\n}\n\nexport function CsProfileLink(props) {\n  return props.id\n    ? (\n      <a {...props} href={`https://www.couchsurfing.com/users/${props.id}`}>\n        {props.children}\n      </a>\n    )\n    : <span {...props}>{props.children}</span>\n}\n","/**\n * Give out pretty date\n * @param  {String} date Date as a string\n * @return {String}\n */\nexport function formatDate(date) {\n  return new Date(date).toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' });\n}\n","import React from 'react'\nimport marked from 'marked';\n\nimport { formatDate } from './utils';\nimport { Section, Heading, Content, CsProfileLink } from './components';\n\nimport './References.css';\n\n/**\n * Count how many certain type references there are in array\n *\n * @param  {Array} references Array of references\n * @param  {String} experience \"positive\", \"neutral\" or \"negative\"\n * @return {Int} Total count\n */\nfunction countReferences(references, experience) {\n  if (!references || references.length === 0) {\n    return 0;\n  }\n\n  return references.filter((reference) => reference.experience === experience).length;\n}\n\nfunction referenceTypeLabel(type) {\n  switch (type) {\n    case 'surf':\n      return 'From Surfer';\n    case 'host':\n      return 'From host';\n    default:\n      return 'Personal';\n  }\n}\n\nfunction References({references}) {\n  return (\n    <Section>\n      <Heading>References</Heading>\n      <Content>\n        <p>\n          { references?.written_references?.length\n            ? (\n              <>\n                <strong>{ `${references.written_references.length} written: ` }</strong>\n                { `${countReferences(references.written_references, 'positive')} positive, ` }\n                { `${countReferences(references.written_references, 'neutral')} neutral, and ` }\n                { `${countReferences(references.written_references, 'negative')} negative.` }\n              </>\n            )\n            : `You didn't write references`\n          }\n        </p>\n        <p>\n          { references?.received_references?.length\n            ? (\n              <>\n                <strong>{ `${references.received_references.length} received: ` }</strong>\n                { `${countReferences(references.received_references, 'positive')} positive, ` }\n                { `${countReferences(references.received_references, 'neutral')} neutral, and ` }\n                { `${countReferences(references.received_references, 'negative')} negative.` }\n              </>\n            )\n            : `You didn't receive references`\n          }\n        </p>\n\n        { references?.received_references?.length && (\n          references.received_references.map((reference) => (\n            <div\n              className=\"Profile-reference\"\n              key={ `${reference.creator_id}-${reference.recipient_id}-${reference.created_at}` }\n            >\n              <p className=\"Profile-reference-meta\">\n                { reference.reference_type && (\n                  <CsProfileLink className=\"Profile-reference-type\" id={reference.creator_id}>\n                    { referenceTypeLabel(reference.reference_type) }\n                  </CsProfileLink>\n                ) }\n                { reference.experience && (\n                  <strong className={`Profile-reference-experience Profile-reference-experience-${reference.experience || 'unknown'}`}>\n                    ★ {(reference.experience || 'unknown')}\n                  </strong>\n                ) }\n                { reference.created_at && (\n                  <span className=\"Profile-reference-date\">\n                    { formatDate(reference.created_at) }\n                  </span>\n                ) }\n              </p>\n              { reference.body && (\n                <p>\n                  <span dangerouslySetInnerHTML={{ __html: marked(reference.body) }} />\n                </p>\n              ) }\n            </div>\n          ))\n        ) }\n      </Content>\n    </Section>\n  );\n}\n\nexport default References;\n","import marked from 'marked';\nimport React from 'react'\n\nimport { Section, Heading, Content } from './components';\nimport './AboutMe.css';\n\nfunction AboutMe({user, interests}) {\n  return (\n    <Section>\n      <Heading>About me</Heading>\n      <Content>\n        { user?.profile?.about_me && (\n          <span dangerouslySetInnerHTML={{ __html: marked(user.profile.about_me) }} />\n        ) }\n        { user?.profile?.about_me && (\n          <span dangerouslySetInnerHTML={{ __html: marked(user.profile.about_me) }} />\n        ) }\n        { user?.profile?.interests && (\n          <>\n            <p><strong>More about my interests</strong></p>\n            <span dangerouslySetInnerHTML={{ __html: marked(user.profile.interests) }} />\n            { interests?.interests && (\n              <ul className=\"AboutMe-interests\">\n              { interests.interests.map(interest => (\n                <li key={interest.name}>{interest.name}</li>\n              )) }\n              </ul>\n            ) }\n          </>\n        ) }\n        { user?.profile?.media && (\n          <>\n            <p><strong>My Favorite Music, Movies & Books</strong></p>\n            <span dangerouslySetInnerHTML={{ __html: marked(user.profile.media) }} />\n          </>\n        ) }\n        { user?.profile?.teach && (\n          <>\n            <p><strong>Teach, Learn, Share</strong></p>\n            <span dangerouslySetInnerHTML={{ __html: marked(user.profile.teach) }} />\n          </>\n        ) }\n        { user?.profile?.amazing_thing && (\n          <>\n            <p><strong>One Amazing Thing I've Done</strong></p>\n            <span dangerouslySetInnerHTML={{ __html: marked(user.profile.amazing_thing) }} />\n          </>\n        ) }\n        { user?.profile?.surf_reason && (\n          <>\n            <p><strong>Why I'm on Couchsurfing</strong></p>\n            <span dangerouslySetInnerHTML={{ __html: marked(user.profile.surf_reason) }} />\n          </>\n        ) }\n        { user?.profile?.offer_hosts && (\n          <>\n            <p><strong>What I Can Share With Hosts</strong></p>\n            <span dangerouslySetInnerHTML={{ __html: marked(user.profile.offer_hosts) }} />\n          </>\n        ) }\n      </Content>\n    </Section>\n  );\n}\n\nexport default AboutMe;\n","import React from 'react'\n\nimport { Section, Heading, Content } from './components';\nimport './Messages.css';\n\nfunction Messages({messages}) {\n  return (\n    <Section>\n      <Heading>Messages</Heading>\n      <Content>\n        { messages.length ? (\n          <div>\n          Messages coming up...\n          </div>\n        ) : 'No messages. :-(' }\n      </Content>\n    </Section>\n  );\n}\n\nexport default Messages;\n","import React from 'react'\n\nimport { Section, Heading, Content, CsProfileLink } from './components';\n\nfunction AboutMe({friends}) {\n  return (\n    <Section>\n      <Heading>Friends</Heading>\n      <Content>\n        { friends.length ? (\n          <ul>\n          { friends.map(friend => {\n            const id = parseInt(friend.profile.replace('https://www.couchsurfing.com/users/', ''), 10);\n            return (\n              <li key={id}>\n                <CsProfileLink id={id}>{friend.profile}</CsProfileLink>\n              </li>\n            );\n          }) }\n          </ul>\n        ) : 'No friends. :-(' }\n      </Content>\n    </Section>\n  );\n}\n\nexport default AboutMe;\n","import React from 'react'\n\nimport { Section, Heading } from './components';\nimport JsonTree from 'react-json-tree';\nimport './Raw.css';\n\nfunction Raw({json}) {\n  return (\n    <Section>\n      <Heading>Raw profile export</Heading>\n      <JsonTree data={json} />\n    </Section>\n  );\n}\n\nexport default Raw;\n","import classnames from 'classnames';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nimport './Profile.css';\nimport { Section, CsProfileLink } from './components';\nimport { formatDate } from './utils';\nimport References from './References';\nimport AboutMe from './AboutMe';\nimport Messages from './Messages';\nimport Friends from './Friends';\nimport Raw from './Raw';\nimport TrustrootsTree from './trustroots-tree.svg';\n\nfunction Profile({profile, images, fileDate}) {\n  const { user_data: user, interests, references, friends, messages } = profile;\n\n  const referencesCount = (references?.written_references?.length ?? 0) + (references?.received_references?.length ?? 0);\n  const friendsCount = friends?.friends?.length ?? 0;\n  const messagesCount = messages?.messages?.length ?? 0;\n  const routes = [\n    { route: '/', label: 'About me' },\n    { route: '/references', label: 'References', count: referencesCount },\n    { route: '/friends', label: 'Friends', count: friendsCount },\n    { route: '/messages', label: 'Messages', count: messagesCount },\n    { route: '/raw', label: 'Raw' }\n  ];\n\n  return (\n    <Router>\n      <div className=\"Profile\">\n        <div className=\"Profile-header\">\n          <p><em>\n            <CsProfileLink id={user?.id}>Your Couchsurfing.com profile</CsProfileLink>\n            { fileDate && ` as of ${ formatDate(fileDate) }` }\n          </em></p>\n          <h1>\n            { user?.profile?.first_name && `${user.profile.first_name} ` }\n            { user?.profile?.last_name && `${user.profile.last_name} ` }\n            { user?.username && `(${user.username})` }\n          </h1>\n          { user?.profile?.occupation && <h3>{ user.profile.occupation }</h3> }\n        </div>\n\n        <Section>\n          <ul className=\"Profile-tabs\">\n            { routes.map(({ route, label, count }) => (\n              <li key={route}>\n                <NavLink activeClassName=\"is-active\" to={ route }>\n                  { label }\n                  { count && <span className=\"Profile-tab-count\">{ count }</span> }\n                </NavLink>\n              </li>\n            )) }\n          </ul>\n        </Section>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <AboutMe user={ user } interests={ interests } />\n          </Route>\n          <Route path=\"/references\">\n            <References references={ references } />\n          </Route>\n          <Route path=\"/friends\">\n            <Friends friends={ friends?.friends || [] } />\n          </Route>\n          <Route path=\"/messages\">\n            <Messages messages={ messages?.messages || [] } />\n          </Route>\n          <Route path=\"/raw\">\n            <Raw json={ profile } />\n          </Route>\n        </Switch>\n\n        <div className=\"promo\">\n          <a href=\"https://www.trustroots.org/?ref=couchspinner\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={TrustrootsTree} className=\"tr-logo\" alt=\"Trustroots\" /><br />\n            Join Trustroots.org<br />\n            Travellers hospitality community.\n          </a>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default Profile;\n","import React, {useCallback, useState} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport jszip from 'jszip';\nimport classnames from 'classnames';\n\nimport './App.css';\nimport Intro from './Intro';\nimport Profile from './Profile';\n// import example from './example-profile.json';\nconst EXAMPLE_PROFILEE = false;\n\nasync function getJsonFromZip(zip) {\n  const files = zip.filter((relativePath, zipEntry) => {\n    return !zipEntry.dir && zipEntry.name.split('.').pop() === 'json';\n  });\n\n  if (!files.length) {\n    return false;\n  }\n\n  const jsonString = await zip.file(files[0].name).async('string');\n\n  try {\n    const json = JSON.parse(jsonString);\n    return json;\n  } catch {\n    return false;\n  }\n}\n\nfunction getImagesFromZip(zip) {\n  // eslint-disable-next-line\n  const files =  zip.filter((relativePath, zipEntry) => {\n    return !zipEntry.dir && ['jpg', 'gif', 'png'].includes(zipEntry.name.split('.').pop());\n  });\n\n  return {};\n}\n\nasync function extractZip(file) {\n  const zip = await jszip.loadAsync(file);\n  const json = await getJsonFromZip(zip);\n  const images = await getImagesFromZip(zip);\n\n  return {\n    json,\n    images,\n  };\n}\n\nfunction App() {\n  const [profile, setProfile] = useState(EXAMPLE_PROFILEE);\n  const [profileImages, setProfileImages] = useState({});\n  const [fileDate, setFileDate] = useState(false);\n\n  const onDrop = useCallback(async acceptedFiles => {\n    console.log('acceptedFiles:',acceptedFiles);\n\n    if (acceptedFiles.length !== 1) {\n      return alert('Just one file please.');\n    }\n\n    const file = acceptedFiles[0];\n\n    if (!['application/zip', 'application/json'].includes(file.type)) {\n      return alert('Please drop either the zip file or json file, e.g. \"couchsurfing-export-123456-202005200751.zip\", or \"123456-202005200751.json\"');\n    }\n\n    setFileDate(file.lastModifiedDate);\n\n    if (file.type === 'application/zip') {\n      const { json, images } = await extractZip(file);\n      setProfile(json);\n      setProfileImages(images);\n    } else if (file.type === 'application/json') {\n      const jsonProfile = await file.text();\n      try {\n        const json = JSON.parse(jsonProfile)\n        setProfile(json);\n      } catch {\n        alert('File is little too funky for us to understand... 😥');\n      }\n    }\n  }, []);\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n\n  return (\n    <div className={ classnames( 'App', { 'is-dropping': isDragActive } ) } {...getRootProps()}>\n      { profile\n        ? <Profile profile={ profile } images={ profileImages } fileDate={ fileDate } />\n        : <Intro isDragActive={ isDragActive } input={ <input {...getInputProps() } />} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sofa.ba454e2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/trustroots-tree.19b96bca.svg\";"],"sourceRoot":""}